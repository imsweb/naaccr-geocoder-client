import java.time.Duration

plugins {
    id 'java-library'
    id 'jacoco'
    id 'checkstyle'
    id 'com.github.spotbugs' version '5.0.12'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'org.sonatype.gradle.plugins.scan' version '2.5.5'
    id "com.github.ben-manes.versions" version '0.43.0'
}

group = 'com.imsweb'
version = '1.17'
description = 'Java client library for NAACCR Geocoding Service'
sourceCompatibility = JavaVersion.VERSION_1_9
targetCompatibility = JavaVersion.VERSION_1_9

println "Starting build using JDK ${Runtime.version().feature()}"

repositories {
    mavenCentral()
}

dependencies {
    api 'com.squareup.retrofit2:retrofit:2.9.0'

    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'junit-addons:junit-addons:1.4'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    testImplementation 'com.jcabi:jcabi-matchers:1.5.3'
}

// enforce UTF-8, display the compilation warnings
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Xlint:-serial" << "-Werror"
}

// the Javadoc was made way too strict in Java 8 and it's not worth the time fixing everything!
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

jar {
    manifest {
        attributes('Implementation-Title': 'NAACCR Gecoding Java Client',
                'Implementation-Version': project.version,
                'Implementation-Vendor': group,
                'Created-By': System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Automatic-Module-Name': 'com.imsweb.geocoder')
    }
}

// checkstyle plugin settings
checkstyle {
    ignoreFailures = true
    configFile = project(':').file('config/checkstyle/checkstyle.xml')
    configProperties = ['suppressionFile': project(':').file('config/checkstyle/suppressions.xml')]
}


// spotbugs plugin settings
spotbugs {
    ignoreFailures = true
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = false
    }
}

// Nexus vulnerability scan (https://github.com/sonatype-nexus-community/scan-gradle-plugin)
ossIndexAudit {
    outputFormat = 'DEPENDENCY_GRAPH'
    printBanner = false
}
check.dependsOn 'ossIndexAudit'

// needed to deploy to Maven Central
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'validation'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'NAACCR Gecodoer Java Client'
                description = 'API mapping for NAACCR Geocoder in Java'
                url = 'https://github.com/imsweb/naaccr-geocoder-client'
                inceptionYear = '2017'

                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'ctmay4'
                        name = 'Chuck May'
                        email = 'mayc@imsweb.com'
                    }
                    developer {
                        id = 'criderp'
                        name = 'Philip Crider'
                        email = 'criderp@imsweb.com'
                    }
                    developer {
                        id = 'jlorentson'
                        name = 'Jesse Lorentson'
                        email = 'lorentsonj@imsweb.com'
                    }
                    developer {
                        id = 'depryf'
                        name = 'Fabian Depry'
                        email = 'depryf@imsweb.com'
                    }
                }

                scm {
                    url = 'https://github.com/imsweb/naaccr-geocoder'
                    connection = 'scm:https://github.com/imsweb/naaccr-geocoder.git'
                    developerConnection = 'scm:git@github.com:imsweb/naaccr-geocoder.git'
                }
            }
        }
    }
}

// setup JAR signing
    signing {
        def signingKey = project.findProperty('signing.armored.key') ?: ''
        def signingPassword = project.findProperty('signing.armored.password') ?: ''

        useInMemoryPgpKeys(signingKey, signingPassword)

        sign publishing.publications.mavenJava
    }

// needed to release on maven central
    nexusPublishing {
        repositories {
            sonatype {
                stagingProfileId = 'ImsNaaccrGeocoderProfileId'

                username = project.findProperty("nexusUsername")
                password = project.findProperty("nexusPassword")
            }
        }

        clientTimeout = Duration.ofSeconds(300)
        connectTimeout = Duration.ofSeconds(60)

        transitionCheckOptions {
            maxRetries.set(50)
            delayBetween.set(Duration.ofMillis(5000))
        }
    }

// don't try to release a snapshot to a non-snapshot repository, that won't work anyway
if (version.endsWith('-SNAPSHOT')) {
    gradle.startParameter.excludedTaskNames += 'signMavenJavaPublication'
    gradle.startParameter.excludedTaskNames += 'closeAndReleaseSonatypeStagingRepository'
}
// Gradle wrapper, this allows to build the project without having to install Gradle!
    wrapper {
        gradleVersion = '7.3.3'
        distributionType = Wrapper.DistributionType.ALL
    }

